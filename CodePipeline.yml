AWSTemplateFormatVersion: 2010-09-09
Description: CovidSafe Example application pipeline
Parameters:
  ProjectName:
    Type: String
    Default: CovidSafe
    Description: Name for the Project
  BucketPrefix:
    Type: String
    Default: covid-safe
  CodeBuildEnvironment:
    Type: String
    Default: "aws/codebuild/standard:4.0"
    Description: Name of the image to use for the CodeBuild container
  DevAccountNo:
    Type: String
    Description: The Account Number of the dev account
  ProdAccountNo:
    Type: String
    Description: The Account Number of the prod account

Resources:
  ArtefactBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub ${BucketPrefix}-artefactbucket
  ArtefactBucketPolicy: 
    Type: AWS::S3::BucketPolicy
    Properties: 
      Bucket: !Ref ArtefactBucket
      PolicyDocument: 
        Statement: 
          - Sid: ServicePermit
            Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: 's3:*'
            Resource: !Sub 'arn:aws:s3:::${BucketPrefix}-artefactbucket'
          - Sid: ServicePermit1
            Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: 's3:*'
            Resource: !Sub 'arn:aws:s3:::${BucketPrefix}-artefactbucket'
          - Sid: AllowDev
            Effect: Allow
            Principal:
              AWS: !Sub 'arn:aws:iam::${DevAccountNo}:root'
            Action: 's3:*'
            Resource: !Sub 'arn:aws:s3:::${BucketPrefix}-artefactbucket/*'
          - Sid: AllowProd
            Effect: Allow
            Principal:
              AWS: !Sub 'arn:aws:iam::${ProdAccountNo}:root'
            Action: 's3:*'
            Resource: !Sub 'arn:aws:s3:::$${BucketPrefix}-artefactbucket/*'

  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action: 
              - 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
      Path: /
      Policies:
        - PolicyName: CodeBuildAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Resource:
                  - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${ProjectName}_build'
                  - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${ProjectName}_build:*'
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
              - Effect: Allow
                Resource: !Sub "arn:aws:s3:::${BucketPrefix}-artefactbucket/*"
                Action: 
                  - s3:*
              - Effect: Allow
                Resource: !Sub "arn:aws:s3:::${BucketPrefix}-artefactbucket"
                Action: 
                  - s3:*
              - Effect: Allow
                Resource: !Sub "arn:aws:s3:::${BucketPrefix}-file-ingestion/*"
                Action: 
                  - s3:*
              - Effect: Allow
                Resource: !Sub "arn:aws:s3:::${BucketPrefix}-file-ingestion"
                Action: 
                  - s3:*
              - Effect: Allow
                Action:
                  - 'codebuild:*'
                  - 'codepipeline:*'
                Resource: '*'
    
  # CodeBuild
  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub '${ProjectName}_build'
      Description: Builds the backend services and creates a cloudformation template to deploy them
      Artifacts:
        Type: CODEPIPELINE
      Environment: 
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: !Sub '${CodeBuildEnvironment}'
        EnvironmentVariables:
          - Name: BUILD_OUTPUT_BUCKET
            Value: !Sub ${BucketPrefix}-artefactbucket
          - Name: AWS_REGION
            Value: !Sub ${AWS::Region}
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Source: 
        Type: CODEPIPELINE
    
  # CodePipeline definition and required roles
  CFNPipelinePolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Description: CloudFormation Pipeline Execution Policy
      Path: "/"
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action: 
                - 'cloudformation:CreateStack'
                - 'cloudformation:DescribeStacks'
                - 'cloudformation:DeleteStack'
                - 'cloudformation:UpdateStack'
                - 'cloudformation:CreateChangeSet'
                - 'cloudformation:ExecuteChangeSet'
                - 'cloudformation:DeleteChangeSet'
                - 'cloudformation:DescribeChangeSet'
                - 'cloudformation:SetStackPolicy'
                - 'cloudformation:SetStackPolicy'
                - 'cloudformation:ValidateTemplate'
                - 'codebuild:StartBuild'
                - 'codebuild:BatchGetBuilds'
            Resource: "*"
          - Effect: Allow
            Resource:
              - !Sub 'arn:aws:s3:::${BucketPrefix}-artefactbucket/*'
            Action: 
              - 's3:*'
          - Effect: Allow
            Resource:
              - !Sub 'arn:aws:s3:::${BucketPrefix}-artefactbucket'
            Action: 
              - 's3:ListBucket'
              - 's3:GetBucketLocation'
          - Effect: Allow
            Resource: !Sub "arn:aws:s3:::${BucketPrefix}-file-ingestion/*"
            Action: 
              - s3:*
          - Effect: Allow
            Resource: !Sub "arn:aws:s3:::${BucketPrefix}-file-ingestion"
            Action: 
              - 's3:ListBucket'
              - 's3:GetBucketLocation'

  PipelineExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action: 
            - 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service: 
                - codepipeline.amazonaws.com
      Path: /
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AWSCodeCommitFullAccess'
        - 'arn:aws:iam::aws:policy/AmazonS3FullAccess'
        - !Ref CFNPipelinePolicy
      Policies:
        - PolicyName: CodePipelineAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
                - Action:
                    - 'iam:PassRole'
                    - 'lambda:InvokeFunction'
                    - 'lambda:ListFunctions'
                    - 'lambda:InvokeAsyc'
                  Effect: Allow
                  Resource: '*'
                - Effect: Allow
                  Action: 'sts:AssumeRole'
                  Resource: 
                    - !Sub arn:aws:iam::${DevAccountNo}:role/${ProjectName}
                    - !Sub arn:aws:iam::${ProdAccountNo}:role/${ProjectName}

  Pipeline:
      Type: AWS::CodePipeline::Pipeline
      Properties:
        ArtifactStore: 
            Location: !Sub ${BucketPrefix}-artefactbucket
            Type: S3
        Name: !Sub ${ProjectName}_pipeline01
        RoleArn: !GetAtt PipelineExecutionRole.Arn
        Stages:
            - Name: Source
              Actions:
                - Name: GitHubRepo
                  ActionTypeId:
                    Category: Source
                    Owner: ThirdParty
                    Provider: GitHub
                    Version: '1'
                  Configuration:
                    Owner: scottjbaldwin
                    Repo: salad
                    BranchName: main
                    OAuthToken:  "{{resolve:secretsmanager:CovidSafeOAuthToken:SecretString:AccessToken}}"
                  OutputArtifacts:
                    - Name: SourceArtefact
                  RunOrder: 1
            - Name: Build
              Actions:
                - Name: CodeBuild
                  ActionTypeId:
                    Category: Build
                    Owner: AWS
                    Provider: CodeBuild
                    Version: '1'
                  Configuration:
                    ProjectName: !Ref CodeBuildProject
                  InputArtifacts:
                    - Name: SourceArtefact
                  OutputArtifacts:
                    - Name: OutputArtefact
                  RunOrder: 1
            - Name: DeployToDev
              Actions:
                - Name: CreateChangeSet
                  RoleArn: !Sub arn:aws:iam::${DevAccountNo}:role/${ProjectName}
                  ActionTypeId:
                    Category: Deploy
                    Owner: AWS
                    Provider: CloudFormation
                    Version: '1'
                  Configuration:
                    ActionMode: CHANGE_SET_REPLACE
                    RoleArn: !Sub arn:aws:iam::${DevAccountNo}:role/${ProjectName}
                    StackName: !Sub '${ProjectName}-Stack'
                    ChangeSetName: !Sub '${ProjectName}-ChangeSet'
                    TemplatePath: OutputArtefact::ROPPStack.yml
                    Capabilities: CAPABILITY_IAM,CAPABILITY_NAMED_IAM
                    ParameterOverrides: |
                      {
                          "Environment" : "dev"
                      }
                  InputArtifacts:
                    - Name: OutputArtefact
                  RunOrder: 1
                - Name: ExecuteChangeSet
                  Namespace: BackendDeploy
                  RoleArn: !Sub arn:aws:iam::${DevAccountNo}:role/${ProjectName}
                  ActionTypeId:
                    Category: Deploy
                    Owner: AWS
                    Provider: CloudFormation
                    Version: '1'
                  Configuration:
                    ActionMode: CHANGE_SET_EXECUTE
                    RoleArn: !Sub arn:aws:iam::${DevAccountNo}:role/${ProjectName}
                    StackName: !Sub '${ProjectName}-Stack'
                    ChangeSetName: !Sub '${ProjectName}-ChangeSet'
                  OutputArtifacts:
                    - Name: !Sub '${ProjectName}BetaChangeSet'
                  RunOrder: 2
            - Name: DeployToProd
              Actions:
                - Name: CreateChangeSet
                  RoleArn: !Sub arn:aws:iam::${ProdAccountNo}:role/${ProjectName}
                  ActionTypeId:
                    Category: Deploy
                    Owner: AWS
                    Provider: CloudFormation
                    Version: '1'
                  Configuration:
                    ActionMode: CHANGE_SET_REPLACE
                    RoleArn: !Sub arn:aws:iam::${ProdAccountNo}:role/${ProjectName}
                    StackName: !Sub '${ProjectName}-Stack'
                    ChangeSetName: !Sub '${ProjectName}-ChangeSet'
                    TemplatePath: OutputArtefact::ROPPStack.yml
                    Capabilities: CAPABILITY_IAM,CAPABILITY_NAMED_IAM
                    ParameterOverrides: |
                      {
                          "Environment" : "prod"
                      }
                  InputArtifacts:
                    - Name: OutputArtefact
                  RunOrder: 1
                - Name: ExecuteChangeSet
                  Namespace: BackendDeploy
                  RoleArn: !Sub arn:aws:iam::${ProdAccountNo}:role/${ProjectName}
                  ActionTypeId:
                    Category: Deploy
                    Owner: AWS
                    Provider: CloudFormation
                    Version: '1'
                  Configuration:
                    ActionMode: CHANGE_SET_EXECUTE
                    RoleArn: !Sub arn:aws:iam::${ProdAccountNo}:role/${ProjectName}
                    StackName: !Sub '${ProjectName}-Stack'
                    ChangeSetName: !Sub '${ProjectName}-ChangeSet'
                  OutputArtifacts:
                    - Name: !Sub '${ProjectName}BetaChangeSet'
                  RunOrder: 2